clear all;
close all;
format long;
addpath(genpath('../Converters'));


%Declaration of parameters:
%Polymer:
Ep = 0.8*10^9;
vp = 0.46;
rhop = 950;

%Silver:
Es = 72.4*10^9;
vs = 0.37;
rhos = 10^4;


%-----------ASSEMBLY:------------------------
[Cp Cs] = StressMatrices(Ep,Es,vp,vs);

[p tri tetr] = loadGeo('spherewshell');
boundary = unique(tri);
[A M] = MassAndStiffnessMatrix3D(tetr,p,Cp,Cs,rhop,rhos);
%[A M] = HomogenousMaterial(tetr(:,1:4),p,Cp);

Tspan=.1;
T0=1.1;
szU=size(A,1);
steps=20;
dt=Tspan/steps;
OLT=0.05;
impactzone=.5;
ballradius=max(p(:,3));
omega=2*pi;

U(:,1)=u0;
howlow=-1.04;
dp =@(OLT,t,omega)  ballradius- OLT*cos(omega*t);
d2dp=@(OLT,t) OLT*omega^2*cos(omega*t);
u=zeros(3324,1);
maxdisplacement=ballradius-impactzone*OLT;
U=zeros(szU,st

[upperNodes, upperPlate ] = upperdirichletnodes( maxdisplacement, p, u, boundary );
[lowerNodes, lowerPlate] = lowerdirichletnodes( p,u, howlow, boundary );


for i=2:steps


 t=T0+i*dt;   

[fnew Anew Mnew] = IncorporateDirichletBoundaryV2(A,M,upperNodes,lowerNodes,upperPlate,lowerPlate,d2dp(OLT,t) )

 utemp= unew +((dt^2)/2)*Mnew\(fnew-Anew*unew) +dt*dUnew;
 dU=(1/dt)*(U(:,i)-U(:,i-1));






